% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/components.R
\name{extract_components}
\alias{extract_components}
\title{Extract predicted components from a Random Planted Forest}
\usage{
extract_components(object, new_data, max_interaction = NULL, predictors = NULL)
}
\arguments{
\item{object}{A fit object of class \code{\link{rpf}}.}

\item{new_data}{Data for new observations to predict.}

\item{max_interaction}{\code{\link{integer}} or \code{NULL}: Maximum degree of interactions to consider.
Default will use the \code{max_interaction} parameter from the \code{\link{rpf}} object.
Must be between \code{1} (main effects only) and the \code{max_interaction} of the \code{\link{rpf}} object.}

\item{predictors}{\code{\link{character}} or \code{NULL}: Vector of one or more column names of predictor variables
in \code{new_data} to extract components for.
If \code{NULL}, all variables and their interactions are returned.}
}
\value{
A \code{\link[data.table:data.table]{data.table}} with the same number of rows as \code{new_data} and one
column for each main and interaction term requested, including the intercept.
For multiclass classification, the number of output columns is multiplied by the number of levels in the outcome.
}
\description{
Prediction components are a functional decomposition of the model prediction.
The sum of all components equals the overall predicted value for an observation.
}
\details{
Extracts all possible components up to \code{max_interaction} degrees,
up to the value set when calling \code{\link[=rpf]{rpf()}}. The intercept is always included.
Optionally \code{predictors} can be specified to only include components including the given variables.
If \code{max_interaction} is greater than \code{length(predictors)}, the \code{max_interaction} will be lowered accordingly.
}
\note{
Depending on the number of predictors and \code{max_interaction}, the number of components will
increase drastically to \code{sum(choose(ncol(new_data), seq_len(max_interaction)))}.
}
\examples{

# Regression task, only some predictors
train <-  mtcars[1:20, 1:4]
test <-  mtcars[21:32, 1:4]

set.seed(23)
rpfit <- rpf(mpg ~ ., data = train, max_interaction = 3, ntrees = 30)

# Extract all components, including main effects and interaction terms up to `max_interaction`
(components <- extract_components(rpfit, test))

# sums to prediction
cbind(rowSums(components$m), predict(rpfit, test))

# Only get components with interactions of a lower degree, ignoring 3-way interactions
extract_components(rpfit, test, max_interaction = 2)

# Only retrieve main effects
(main_effects <- extract_components(rpfit, test, max_interaction = 1))

# The difference is the combined contribution of interaction effects
cbind(rowSums(main_effects$m), predict(rpfit, test))

}
