% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rpf.R
\name{rpf}
\alias{rpf}
\alias{rpf.default}
\alias{rpf.data.frame}
\alias{rpf.matrix}
\alias{rpf.formula}
\alias{rpf.recipe}
\title{Random Planted Forest}
\usage{
rpf(
  x,
  ...,
  max_interaction = 1,
  ntrees = 50,
  splits = 30,
  split_try = 10,
  t_try = 0.4,
  deterministic = FALSE,
  parallel = FALSE,
  purify = FALSE,
  cv = FALSE,
  loss = "L2",
  delta = 0,
  epsilon = 0.1
)

\method{rpf}{default}(x, ...)

\method{rpf}{data.frame}(x, y, ...)

\method{rpf}{matrix}(x, y, ...)

\method{rpf}{formula}(formula, data, ...)

\method{rpf}{recipe}(x, data, ...)
}
\arguments{
\item{x}{Feature matrix or \code{data.frame}.}

\item{...}{(Ignored).}

\item{max_interaction}{\verb{[1]}: Maximum level of interaction determining maximum
number of split dimensions for a tree.}

\item{ntrees}{\verb{[50]}: Number of trees generated per family.}

\item{splits}{\verb{[30]}: Number of performed splits for each tree family.}

\item{split_try}{\verb{[10]}: TODO.}

\item{t_try}{\verb{[0.4]}: TODO.}

\item{deterministic}{\verb{[FALSE]}: Choose whether approach deterministic or random.}

\item{parallel}{\verb{[FALSE]}: Perform algorithm in parallel or serialized.}

\item{purify}{\verb{[FALSE]}: Whether the forest should be purified.}

\item{cv}{\verb{[FALSE]}: Determines if cross validation is performed.}

\item{loss}{\verb{["L2"]}: For regression, only \code{"L2"} is supported. For
classification, \code{"L1"}, \code{"logit"} and "\code{exponential}" are also available.}

\item{delta}{\verb{[0]}: TODO.}

\item{epsilon}{\verb{[0.1]}: TODO.}

\item{y}{Target vector for use with \code{x}.
The class of \code{y} (either \code{numeric} or \code{\link{factor}}) determines if regression
or classification will be performed.}

\item{formula}{Formula specification, e.g. y ~ x1 + x2.}

\item{data}{A \code{data.frame} for use with \code{formula}.}
}
\value{
Object of class \code{"rpf"} with model object contained in \verb{$fit}.
}
\description{
Random Planted Forest
}
\examples{
# Regression with x and y
rpfit <- rpf(x = mtcars[, c("cyl", "wt")], y = mtcars$mpg)

# Regression with formula
rpfit <- rpf(mpg ~ cyl + wt, data = mtcars)
}
